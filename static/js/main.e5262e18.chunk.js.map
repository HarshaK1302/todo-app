{"version":3,"sources":["component/TodoList.js","component/CreateTodo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","completeTodo","deleteTodo","todoArr","length","JSON","parse","localStorage","getItem","className","map","el","i","title","onClick","CreateTodo","useState","done","todo","setTodo","setTodoArr","todos","hasOwnProperty","createTodo","event","name","target","key","unshift","setItem","stringify","swal","type","placeholder","value","onKeyPress","onChange","obj","text","icon","button","dangerMode","then","res","splice","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAyCeA,MAvCf,SAAkBC,GAChB,IAAQC,EAA6BD,EAA7BC,aAAcC,EAAeF,EAAfE,WAClBC,EACFH,EAAMG,QAAQC,OAAS,EACnBJ,EAAMG,QACNE,KAAKC,MAAMC,aAAaC,QAAQ,UAEtC,OACE,qBAAKC,UAAU,YAAf,SACE,6BACGN,GAAWA,EAAQC,OAAS,EACzBD,EAAQO,KAAI,SAACC,EAAIC,GAAL,OACV,+BACE,qBAAKH,UAAWE,EAAE,KAAW,eAAiB,KAA9C,SACGA,EAAGE,QAEN,sBAAKJ,UAAU,OAAf,UACE,mBACEI,MAAM,WACNC,QAAS,kBAAMb,EAAaW,IAC5BH,UAAS,sCACPE,EAAE,KAAW,QAAU,UAI3B,mBACEE,MAAM,SACNC,QAAS,kBAAMZ,EAAWU,IAC1BH,UAAU,kCAhBPG,MAqBX,U,gBCyDGG,MAxFf,WACE,MAAwBC,mBAAS,CAAEH,MAAO,GAAII,MAAM,IAApD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BH,mBAAS,IAAvC,mBAAOb,EAAP,KAAgBiB,EAAhB,KAEIC,EAAQd,aAAae,eAAe,SACpCjB,KAAKC,MAAMC,aAAaC,QAAQ,UAChC,GAUEe,EAAa,SAACC,GAClB,IAAQC,EAASD,EAAME,OAAfD,KACU,UAAdD,EAAMG,KAA4B,YAATF,IACR,KAAfP,EAAKL,OACPQ,EAAMO,QAAQV,GACdX,aAAasB,QAAQ,QAASxB,KAAKyB,UAAUT,IAC7CF,EAAQ,CAAEN,MAAO,GAAII,MAAM,KAE3Bc,IAAK,OAAQ,0BAA2B,WA8B9C,OACE,qCACE,sBAAKtB,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,gDACA,mDAEF,sBAAKA,UAAU,eAAf,UACE,uBACEuB,KAAK,OACLP,KAAK,OACLQ,YAAY,iBACZC,MAAOhB,EAAKL,MACZsB,WAAYZ,EACZa,SA5DO,SAACZ,GAChB,IAAMU,EAAUV,EAAME,OAAhBQ,MACFG,EAAM,GACVA,EAAG,MAAYH,EACfG,EAAG,MAAW,EACdlB,EAAQkB,MAyDF,wBACE5B,UAAU,cACVuB,KAAK,SACLP,KAAK,UACLX,QAASS,EAJX,4BAUJ,cAAC,EAAD,CACEpB,QAASA,EACTF,aArDe,SAACW,IACK,IAArBS,EAAMT,GAAN,OACFS,EAAMT,GAAN,MAAmB,EACnBL,aAAasB,QAAQ,QAASxB,KAAKyB,UAAUT,IAC7CD,EAAWC,GACXU,IAAK,YAAa,iBAAkB,aAiDlC7B,WA7Ca,SAACU,GAClBmB,IAAK,CACHlB,MAAO,gBACPyB,KAAM,2DACNC,KAAM,UACNC,QAAQ,EACRC,YAAY,IACXC,MAAK,SAACC,GACHA,IACFtB,EAAMuB,OAAOhC,EAAG,GAChBL,aAAasB,QAAQ,QAASxB,KAAKyB,UAAUT,IAC7CD,EAAWC,cC1CJwB,MARf,WACE,OACE,qBAAKpC,UAAU,YAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e5262e18.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TodoList(props) {\r\n  const { completeTodo, deleteTodo } = props;\r\n  let todoArr =\r\n    props.todoArr.length > 0\r\n      ? props.todoArr\r\n      : JSON.parse(localStorage.getItem(\"todos\"));\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <ul>\r\n        {todoArr && todoArr.length > 0\r\n          ? todoArr.map((el, i) => (\r\n              <li key={i}>\r\n                <div className={el[\"done\"] ? \"line-through\" : null}>\r\n                  {el.title}\r\n                </div>\r\n                <div className=\"icon\">\r\n                  <i\r\n                    title=\"Complete\"\r\n                    onClick={() => completeTodo(i)}\r\n                    className={`fas fa-check-circle pointer ${\r\n                      el[\"done\"] ? \"green\" : \"blue\"\r\n                    }`}\r\n                  />\r\n\r\n                  <i\r\n                    title=\"Delete\"\r\n                    onClick={() => deleteTodo(i)}\r\n                    className=\"fas fa-trash-alt pointer\"\r\n                  />\r\n                </div>\r\n              </li>\r\n            ))\r\n          : null}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction CreateTodo() {\r\n  const [todo, setTodo] = useState({ title: \"\", done: false });\r\n  const [todoArr, setTodoArr] = useState([]);\r\n\r\n  let todos = localStorage.hasOwnProperty(\"todos\")\r\n    ? JSON.parse(localStorage.getItem(\"todos\"))\r\n    : [];\r\n\r\n  const onChange = (event) => {\r\n    let { value } = event.target;\r\n    let obj = {};\r\n    obj[\"title\"] = value;\r\n    obj[\"done\"] = false;\r\n    setTodo(obj);\r\n  };\r\n\r\n  const createTodo = (event) => {\r\n    const { name } = event.target;\r\n    if (event.key === \"Enter\" || name === \"addTodo\") {\r\n      if (todo.title !== \"\") {\r\n        todos.unshift(todo);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n        setTodo({ title: \"\", done: false });\r\n      } else {\r\n        swal(\"Oops\", \"Please write todo first\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const completeTodo = (i) => {\r\n    if (todos[i][\"done\"] !== true) {\r\n      todos[i][\"done\"] = true;\r\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n      setTodoArr(todos);\r\n      swal(\"Good job!\", \"Todo Completed\", \"success\");\r\n    }\r\n  };\r\n\r\n  const deleteTodo = (i) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this file!\",\r\n      icon: \"warning\",\r\n      button: true,\r\n      dangerMode: true,\r\n    }).then((res) => {\r\n      if (res) {\r\n        todos.splice(i, 1);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n        setTodoArr(todos);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div className=\"text-end\">\r\n          <h2>React Todo App</h2>\r\n          <h4>Add a new Todo</h4>\r\n        </div>\r\n        <div className=\"text-addTodo\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"todo\"\r\n            placeholder=\"Add a note....\"\r\n            value={todo.title}\r\n            onKeyPress={createTodo}\r\n            onChange={onChange}\r\n          />\r\n          <button\r\n            className=\"btn-addTodo\"\r\n            type=\"button\"\r\n            name=\"addTodo\"\r\n            onClick={createTodo}\r\n          >\r\n            Add Todo\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <TodoList\r\n        todoArr={todoArr}\r\n        completeTodo={completeTodo}\r\n        deleteTodo={deleteTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default CreateTodo;\r\n","import React from \"react\";\nimport CreateTodo from \"./component/CreateTodo\";\n\nfunction App() {\n  return (\n    <div className=\"outer-box\">\n      <CreateTodo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./assets/style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}